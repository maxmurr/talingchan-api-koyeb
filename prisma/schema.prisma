// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model customer {
  CID      Int       @id @default(autoincrement())
  CName    String    @unique @db.VarChar(30)
  CTel     String    @unique @db.VarChar(10)
  invoices invoice[]
}

model employee {
  EmpID       Int       @id @default(autoincrement())
  EmpName     String    @unique @db.VarChar(30)
  EmpPosition String    @db.VarChar(20)
  EmpTel      String    @unique @db.VarChar(10)
  EmpPassword String    @db.VarChar(20)
  invoices    invoice[]
}

model product {
  PID          Int    @id @default(autoincrement())
  PName        String @unique @db.VarChar(120)
  PPrice       Float  @db.Double
  PDescription String @db.Text
  PPicture     String @db.VarChar(512)
  lots         lot[]
}

model unit {
  UID             Int              @id @default(autoincrement())
  UDetail         String           @db.VarChar(20)
  lots            lot[]
  invoice_details invoice_detail[]
}

model invoice {
  IID             Int              @id @default(autoincrement())
  IStatus         String           @db.VarChar(20)
  IDate           DateTime         @default(now())
  customer        customer         @relation(fields: [CID], references: [CID])
  CID             Int
  employee        employee         @relation(fields: [EmpID], references: [EmpID])
  EmpID           Int
  invoice_details invoice_detail[]
}

model lot {
  LotID           Int              @id @default(autoincrement())
  LotDate         DateTime         @default(now())
  LotQty          Float            @db.Double
  invoice_details invoice_detail[]
  unit            unit             @relation(fields: [UID], references: [UID])
  UID             Int
  product         product          @relation(fields: [PID], references: [PID])
  PID             Int
}

model invoice_detail {
  INVQty   Float   @db.Double
  INVPrice String  @db.VarChar(6)
  unit     unit    @relation(fields: [UID], references: [UID])
  UID      Int
  invoice  invoice @relation(fields: [IID], references: [IID])
  IID      Int     @id
  lot      lot     @relation(fields: [LotID], references: [LotID])
  LotID    Int
}
